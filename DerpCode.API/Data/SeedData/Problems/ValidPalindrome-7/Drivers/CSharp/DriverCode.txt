#pragma warning disable CS8602
using System;
using System.Collections.Generic;
using System.Text.Json;
using DerpCode.Driver.Base;

namespace DerpCode.Driver.ValidPalindrome
{
    /// <summary>
    /// Problem-specific driver for ValidPalindrome problem.
    /// </summary>
    public class ValidPalindromeDriver : BaseProblemDriver
    {
        /// <summary>
        /// Parse input as array of strings and expected output as array of booleans.
        /// </summary>
        public override List<TestCase> ParseTestCases(object input, object expectedOutput)
        {
            var inputArray = JsonSerializer.Deserialize<string[]>(input.ToString()!);
            var expectedArray = JsonSerializer.Deserialize<bool[]>(expectedOutput.ToString()!);
            
            var testCases = new List<TestCase>();
            
            for (int i = 0; i < inputArray!.Length; i++)
            {
                testCases.Add(new TestCase
                {
                    Input = inputArray[i],
                    ExpectedOutput = expectedArray![i]
                });
            }
            
            return testCases;
        }

        /// <summary>
        /// Execute the IsPalindrome method with the test case input.
        /// </summary>
        public override object? ExecuteTestCase(TestCase testCase, int index)
        {
            var solution = new Solution();
            var inputString = (string)testCase.Input;
            
            return solution.IsPalindrome(inputString);
        }

        /// <summary>
        /// Compare results using boolean equality.
        /// </summary>
        public override bool CompareResults(object? actual, object expected)
        {
            return (bool)actual! == (bool)expected;
        }

        /// <summary>
        /// Format error message for failed tests.
        /// </summary>
        public override string FormatErrorMessage(object? actual, object expected)
        {
            return $"Expected {expected} but got {actual}";
        }
    }

    public class Program
    {
        public static void Main(string[] args)
        {
            // Create and run the driver
            var driver = new BaseDriver(new ValidPalindromeDriver());
            driver.Run(args);
        }
    }
}
