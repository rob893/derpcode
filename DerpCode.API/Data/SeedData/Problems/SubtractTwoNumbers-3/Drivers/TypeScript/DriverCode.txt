import { ProblemDriverBase, BaseDriver, TestCase } from './base-driver';
import { subtract } from './solution';

interface TestInput {
    a: number;
    b: number;
}

/**
 * Problem-specific driver for SubtractTwoNumbers problem.
 */
class SubtractTwoNumbersDriver extends ProblemDriverBase {
    /**
     * Parse input as pairs of integers and expected output as array of integers.
     */
    parseTestCases(input: any, expectedOutput: any): TestCase[] {
        const testCases: TestCase[] = [];
        
        for (let i = 0; i < input.length; i += 2) {
            testCases.push({
                input: { a: input[i], b: input[i + 1] } as TestInput,
                expectedOutput: expectedOutput[i / 2]
            });
        }
        
        return testCases;
    }

    /**
     * Execute the subtract function with the test case inputs.
     */
    executeTestCase(testCase: TestCase, index: number): any {
        const inputData = testCase.input as TestInput;
        return subtract(inputData.a, inputData.b);
    }

    /**
     * Compare results using simple equality.
     */
    compareResults(actual: any, expected: any): boolean {
        return actual === expected;
    }
}

// Create and run the driver
const driver = new BaseDriver(new SubtractTwoNumbersDriver());
driver.run();
