import { BaseDriver, IProblemDriver } from './base-driver.js';
import { atMost } from './solution.js';

/**
 * Problem-specific driver for AtMost problem.
 */
class AtMostDriver extends IProblemDriver {
    /**
     * Parse input as array, target, and atMostNTimes, and expected output as array of booleans.
     */
    parseTestCases(input, expectedOutput) {
        const testCases = [];
        
        for (let i = 0; i < input.length; i += 3) {
            testCases.push({
                input: { 
                    arr: input[i], 
                    target: input[i + 1], 
                    atMostNTimes: input[i + 2] 
                },
                expectedOutput: expectedOutput[i / 3]
            });
        }
        
        return testCases;
    }

    /**
     * Execute the atMost function with the test case inputs.
     */
    executeTestCase(testCase) {
        const { arr, target, atMostNTimes } = testCase.input;
        return atMost(arr, target, atMostNTimes);
    }

    /**
     * Compare results using simple equality.
     */
    compareResults(actual, expected) {
        return actual === expected;
    }

    /**
     * Format error message for failed tests.
     */
    formatErrorMessage(actual, expected) {
        return `Expected ${expected} but got ${actual}`;
    }
}

// Create and run the driver
const driver = new BaseDriver(new AtMostDriver());
driver.run();
