class TreeNode {
    val: number;
    left: TreeNode | null;
    right: TreeNode | null;
    
    constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
        this.val = (val === undefined ? 0 : val);
        this.left = (left === undefined ? null : left);
        this.right = (right === undefined ? null : right);
    }
}

function postorderTraversal(root: TreeNode | null): number[] {
    const result: number[] = [];
    postorderHelper(root, result);
    return result;
}

function postorderHelper(node: TreeNode | null, result: number[]): void {
    if (!node) return;
    
    postorderHelper(node.left, result);  // Left
    postorderHelper(node.right, result); // Right
    result.push(node.val);               // Root
}

export { postorderTraversal, TreeNode };
