from typing import List, Optional

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = left
        self.right = right

def postorder_traversal(root: Optional[TreeNode]) -> List[int]:
    result = []
    postorder_helper(root, result)
    return result

def postorder_helper(node: Optional[TreeNode], result: List[int]) -> None:
    if not node:
        return
    
    postorder_helper(node.left, result)   # Left
    postorder_helper(node.right, result)  # Right
    result.append(node.val)               # Root
