class TreeNode {
    val: number;
    left: TreeNode | null;
    right: TreeNode | null;
    
    constructor(val?: number, left?: TreeNode | null, right?: TreeNode | null) {
        this.val = (val === undefined ? 0 : val);
        this.left = (left === undefined ? null : left);
        this.right = (right === undefined ? null : right);
    }
}

export function inorderTraversal(root: TreeNode | null): number[] {
    const result: number[] = [];
    
    function inorderHelper(node: TreeNode | null): void {
        if (node === null) return;
        
        inorderHelper(node.left);   // Left
        result.push(node.val);      // Root
        inorderHelper(node.right);  // Right
    }
    
    inorderHelper(root);
    return result;
}
