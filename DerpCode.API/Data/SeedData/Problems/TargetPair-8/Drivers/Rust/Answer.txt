use std::collections::HashMap;

/// Given a vector of integers nums and an integer target, return indices of the two numbers
/// such that they add up to target.
pub fn target_pair(nums: Vec<i32>, target: i32) -> Vec<i32> {
    let mut num_map = HashMap::new();
    
    for (i, num) in nums.iter().enumerate() {
        let complement = target - num;
        
        if let Some(&complement_index) = num_map.get(&complement) {
            return vec![complement_index as i32, i as i32];
        }
        
        num_map.insert(num, i);
    }
    
    vec![] // Should never reach here given the problem constraints
}
